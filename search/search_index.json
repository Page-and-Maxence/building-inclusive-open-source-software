{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Building Inclusive Open Source Software","text":""},{"location":"#what-is-it","title":"What is it?","text":"<p>It all started with a statement:</p> <p>Despite being deeply based on values of sharing and empowerment, FOSS projects often fail at being inclusive.</p> <p>This project aims at providing accessibility and inclusiveness knowledge for organizations and individuals who build open-source software.</p> <p>This repository contains short training modules (ranging from 10 to 30 minutes), which can either be dispensed to teams as workshops, or individually read as articles. These modules cover a wide range of subjects, from conceptual and historical background on accessibility and inclusiveness, to design and programming guidelines.</p> <p>These modules should not be seen as holding the truth regarding the subjects tackled, but rather as a condensed introduction which goal is to help teams get started with accessibility and inclusiveness for their product.</p> <p>The easiest way to access the content is via the static web site built from this repository.</p>"},{"location":"#where-does-it-come-from","title":"Where does it come from?","text":"<p>This project started out as we - Page Magnier--Slimani (Jami) and Maxence Vahedi (Olvid) - struggled with the lack of awareness and specific resources on accessible and inclusive applicative development. We therefore began this collaborative project, which goal is to provide accessibility and inclusiveness resources to our teams and to the FOSS community.</p> <p>Please note that we are not accessibility or inclusiveness experts, but passionate people who did their best to provide qualitative content and who will be happy to get any feedback or contribution you may have! The applications we were working on at this time are not perfect by any means from an inclusiveness standpoint. With this project, we only try to provide some answers to the questions we had when beginning our work on accessibility and inclusiveness.</p> <p>We truly want this project to keep evolving beyond its original scope and our limited expertise.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If at any point through your reading, you find some mistakes or missing information, please let us know by opening an issue or a pull request. We will be happy to review it and incorporate it to the project. We will also be happy to integrate any new module you would like to write.</p> <p>To run the project locally :</p> <ul> <li> <p>Clone the repository</p> </li> <li> <p>Install mkdocs:</p> </li> </ul> <pre><code>pip install mkdocs-material\n</code></pre> <ul> <li>Run the server</li> </ul> <pre><code>mkdocs serve\n</code></pre> <p>If you commit, please use the syntax \"[section]-[acronym]: [commit_description]\" (example: \"A-AIE: first version of module\").</p> <p>If you need any help incorporating your work in ours, please feel free to open an issue or contact us at 'maxence.vahedi@proton.me' or 'pagems@proton.me'.</p>"},{"location":"#using-this-projects-content","title":"Using this project's content","text":"<p>This project is licensed under CC BY-SA 4.0. This means that you are free to share, adapt and use it's content (even for commercial use). Please note that when doing so you need to give appropriate credit and to release your version under the same license, indicating if changes were made.</p>"},{"location":"A-AIE/","title":"\ud83d\udc69\u200d\ud83e\uddbd A-AIE: Accessibility &amp; Ableism","text":"<p>In this module</p> <p>This module introduces the concepts of accessibility and ableism, from various standpoints.</p> <p>\u26f3\ufe0f Section: A. What is accessibility ?</p> <p>\ud83d\udc65 Audience: Everyone</p> <p>\u23f1\ufe0f \ufe0fDuration: 20'</p> <p>\ud83d\udcda Prerequisites: A-FNA: Feeling the need for accessibility</p> <p>\ud83d\udcd6 Is a prerequisite to: None</p>"},{"location":"A-AIE/#when-to-use","title":"When to use ?","text":"<p>Use this module to get a nuanced sense of what accessibility, ableism and techno-ableism really mean.</p>"},{"location":"A-AIE/#description","title":"Description","text":""},{"location":"A-AIE/#1-what-is-accessibility","title":"1. What is accessibility","text":""},{"location":"A-AIE/#1a-collective-definition-of-accessibility","title":"1.A Collective Definition of accessibility","text":"<p>Form a circle. The first participant will try to define accessibility. Write their proposition on a whiteboard. Each person must then iterate upon this definition, explaining to everyone the changes they make.</p> <p>We then read the collective definition, and ask once again if anyone wants to change something. Once it\u2019s settled, we can move onto the next part of this module.</p>"},{"location":"A-AIE/#1b-formal-definitions-of-accessibility","title":"1.B Formal definitions of accessibility","text":"<p>If you did the word-cloud of Accessibility, inclusion &amp; exclusion, you can go through the words that were proposed and try to match them to one of the following definition standpoints :</p> <p>From a product design standpoint</p> <p>According to Wikipedia :</p> <p>Wikipedia</p> <p>Accessibility is the design of products, devices, services, vehicles, or environments so as to be usable by disabled people.[1] The concept of accessible design and practice of accessible developments ensures both \"direct access\" (i.e. unassisted) and \"indirect access\" meaning compatibility with a person's assistive technology (for example, computer screen readers).[2]</p> <p>From a legal standpoint</p> <p>\ud83c\udde8\ud83c\udde6 Canada</p> <p>In the Accessible Canada Act (ACA), the government of Canada stated in 2019 that the primary goal of their accessibility policy was to:</p> <p>Accessible Canada Act (ACA)</p> <p>The overarching goal of the ACA is to realize a barrier-free Canada by 2040. The legislation benefits all Canadians, specially persons with disabilities, through the proactive dentification, removal and prevention of barriers to accessibility in 7 priority areas:</p> <ul> <li>employment</li> <li>the built environment</li> <li>information and communication technologies (ICT)</li> <li>communication other than ICT</li> <li>the design and delivery of programs and services</li> <li>the procurement of goods, services and facilities</li> <li>transportation</li> </ul> <p>\ud83c\uddeb\ud83c\uddf7 France</p> <p>French law defines accessibility as</p> <p>French government</p> <p>Allowing the autonomy and participation of people with disabilities, by reducing or even removing the gap between their abilities, needs and will - and the physical, organizational and cultural components of their environment.</p> <p>Additionally, French companies are subject to the EAA, which is mentioned below.</p> <p>\ud83c\uddea\ud83c\uddfa European Union</p> <p>The European Accessibility Act states that accessibility \"should be achieved by the systematic removal and prevention of barriers, preferably through a universal design or \u2018design for all\u2019 approach, which contributes to ensuring access for persons with disabilities on an equal basis with others.\"</p> <p>Since June of 2025, almost all businesses (excluding microenterprises) are required to comply with the EAA requirements.</p> <p>From a software standpoint</p> <p>Dylan Barell defines accessibility in software as</p> <p>Agile Accessibility Handbook, Dylan Barell</p> <p>It basically comes down to three principles:</p> <ul> <li>Can all your users, with the abilities and senses that they possess, perceive the information your application presents to them? For example, can they \u201csee\u201d the meaning of the little icon button with an image of a pen inside     t?</li> <li>Can your users, with their specific input device or assistive technology, operate all the controls within your application\u2019s user interface? For example, if your application supports the operation of a button through     ouching the screen, does it also allow that button to be operated through a keyboard and a voice command?</li> <li>Can your users understand the information and the user interface controls? For example, if the application requires the creation of a password with constraints, are those constraints clearly communicated in a way that allows the user to complete the task without undue difficulty or an unreasonable degree of intellectual skill?</li> </ul> <p>In the French DINUM's RGAA (General reference document of accessibility enhancement), an accessible software is defined as one that can be perceived, understood, used, and optimal for people with disabilities.</p> <p>From a political standpoint</p> <p>We propose to define politically accessibility as:</p> <p>Trying to fight back against the structural tendency to exclusion of disabled people and attempting to provide them with a place (virtual or not) where they feel at ease and free to express themselves.</p> <p>Take some time to reflect together onto which definition is the closest to the one you built together. How do participants feel about all those definitions ?</p>"},{"location":"A-AIE/#2-undestanding-ableism","title":"2. Undestanding ableism","text":""},{"location":"A-AIE/#21-what-is-ableism","title":"2.1 What is ableism ?","text":"<p>Ableism can be defined as</p> <p>Cambridge dictionary</p> <p>policies, behaviors, rules, etc. that result in unfair or harmful treatment of disabled people (= people who have an illness, injury, or condition that makes it difficult for them to do things that most other people can do) and in a continued unfair advantage to people who are not disabled</p> <p>Right now, some parts of your apps might only be accessible to those who can only, for example, see and hear. Thinking these senses as the \u201cdefault\u201d mediums for interacting with apps is ableist. It is very important to keep in mind that people who are qualified of \u201cdisabled\u201d are in reality simply working with a different set of abilities, which is typically more marginal, yet not inferior. If they can\u2019t access your app, it means that your design is broken - not them.</p> <p>A key to fighting ableism is remembering that disabilities only arise when there is a gap between the environments\u2019 expectations on what people can do, how they are supposed to do it and what and how people can actually do it.  Environment - and the way it is designed - plays an equal role as the body when it comes to disability. For example, in an environment built to be completely flat and non-obstructed, people who walk are way slower than people using a wheelchair.</p> <p>It\u2019s quite clear that our goal is to minimize ableism in the software that we provide, to build a more inclusive environment for everyone.</p>"},{"location":"A-AIE/#22-what-is-techno-ableism","title":"2.2 What is techno-ableism ?","text":"<p>Techno-ableism is a term defined by Ashley Shew in her book Against Technoableism, Rethinking Who Needs Improvement, a lecture that we truly recommend.</p> <p>In the introduction of her book, she writes</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>Technoableism is a particular type of ableism, one that is highly visible in media and entertainment and omnipresent in the ways most people casually talk about technologies aimed at disability. Technoableism is a belief in the power of technology that considers the elimination of disability a good thing, something we should strive for. It\u2019s a classic form of ableism\u2014bias against disabled people, bias in favor of nondisabled ways of life. Technoableism is the use of technologies to reassert those biases, often under the guise of empowerment.</p> <p>Put simply, it\u2019s believing that disabled people need to be fixed by technology. Rather than celebrating the diversity and diverging ability of dis-abled people, tech innovators tend to try to \u201cfix\u201d them rather than working on the environment their technologies are structuring, often leaving them outside of the discussion about their needs.</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>Sometimes technology is seen as redeeming our lives: non-disabled people believe\u2014and expect us to believe\u2014that technology will \u201csolve\u201d the problem of our disability and save us, or those like us, in the future. Yet these expectations often don\u2019t match our circumstances. They confine us. When people assume that one device will \u201cfix\u201d us, they don\u2019t pay attention to the host of other concerns around disability technology\u2014the bad planning and design, the need for constant ongoing maintenance, the problem of money [\u2026], and the staggering lack of social support for disability accommodations [\u2026]. These are all forms of ableism.</p> <p>Software plays a huge role in today\u2019s daily life and communication. It can be a huge lever of inclusion, and consequently also of exclusion. Therefore, it\u2019s our duty as developers to strive to include as many people as possible, without falling into the trap of thinking that we are saving or fixing anything else than our apps.</p> <p>Some article titles documented by Ashley Shew depict the ableist \u201chero-syndrom\u201d that can occur in the tech industry.</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>\u201cTHE TECH GIVING PEOPLE POWER TO DEAL WITH DISABILITY\u201d \u2014BBC NEWS\u201cHOW TECHNOLOGY WILL CHANGE THE LIVES OF PEOPLE WITH DISABILITIES\u201d \u2014FORBES\u201cFIRST PROSTHETIC LIMB DESIGNED FOR WOMEN: \u2018I FEEL LIBERATED\u2019\u201d \u2014BBC2\u201cROBOTIC EXOSKELETONS ARE HERE, AND THEY\u2019RE CHANGING LIVES\u201d \u2014POPSCI</p> <p>It becomes clearer and clearer that our goal is to try and provide a safe place rather than fix or save anyone. For a more concrete example, Ashley Shew showcases how Discord became a welcoming place for many autistic people.</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>Awni mentioned Discord as a social platform \u201ceasily adapted by autistic users to facilitate autistic-styled communication due to its flexibility both with custom emotes and for purpose-centric server organization.\u201d Gardiner pointed to the importance of letting autistic people lead tech conversations with what they want and how they want to do things. This doesn\u2019t mean jumping in to teach autistic people to play games in the way allistic people do but rather letting the \u201cnothing about us without us\u201d lesson of the disability rights movement carry into this space: to learn from autistic people how to use spaces autistically.</p> <p>Design must therefore provide flexibility and adaptability for the varying need of users and not restrict a normative user experience.</p> <p>Understanding those concepts are crucial to avoid very common misguided behaviors. But now, we need to see how today\u2019s organizations and regulation stand regarding them\u2026</p>"},{"location":"A-AIE/#resources","title":"Resources","text":"<p>Particify \u2013 Interactive education</p>"},{"location":"A-AIE/#sources","title":"Sources","text":"<p>Wikipedia's definition of Accessibility</p> <p>About an Accessible Canada</p> <p>Notion d'accessibilit\u00e9 num\u00e9rique - RGAA (France)</p> <p>Loi accessibilit\u00e9 : cadre l\u00e9gal et obligations</p> <p>Agile Accessibility Handbook</p> <p>Definition of ableism</p> <p>Shew Ashley, Against Technoableism: rethinking who needs improvement. 2023</p>"},{"location":"A-ASP/","title":"\ud83d\ude80 A-ASP: Accessibility starting point","text":"<p>In this module</p> <p>This short module allows people to share anonymously their initial position by answering questions regarding accessibility, before discussing the results collectively.</p> <p>\u26f3\ufe0f Section: A. What is accessibility ?</p> <p>\ud83d\udc65 Audience: Everyone</p> <p>\u23f1\ufe0f \ufe0fDuration: 15'</p> <p>\ud83d\udcda Prerequisites: None</p>"},{"location":"A-ASP/#when-to-use","title":"When to use ?","text":"<p>Use this module to kick off the training. It is useful to get a collective feeling of how is the room\u2019s initial knowledge and interest about the subject.</p>"},{"location":"A-ASP/#description","title":"Description","text":"<p>Participants are asked a few questions which results are then shown on the screen and discussed collectively.</p> <p>These questions can include:</p> <ul> <li>On a scale from one to ten, how do you evaluate your knowledge about accessibility ?</li> <li>How much time do you typically spend on accessibility issues during a week ?</li> <li>Is there something preventing you from dealing with the topic as much as you would ideally like to ?</li> </ul> <p>Between each question, it can be useful to discuss collectively the results, avoiding the awkward situation where participants would fill out the answers and remain silent.</p> <p>It can be a good idea to ask the participants possible explanations of these results, rather than asking them to explain their own answer, as we would not want anyone feeling ashamed about their initial position.</p>"},{"location":"A-ASP/#resources","title":"Resources","text":"<p>Particify: an open source tool which is useful to do live polls, word clouds, etc.</p>"},{"location":"A-BCT/","title":"\ud83d\uddfa\ufe0f A-BCT Brief cartography of today\u2019s accessibility landscape","text":""},{"location":"A-FNA/","title":"\ud83e\udef3\ud83c\udfff A-FNA: Feeling the need for accessibility","text":"<p>In this module</p> <p>Sometimes, understanding a concept is not enough. Feeling the need for accessibility and the impacts of ableism will make it easier for trainees to engage.</p> <p>\u26f3\ufe0f Section: A. What is accessibility ?</p> <p>\ud83d\udc65 Audience: Everyone</p> <p>\u23f1\ufe0f \ufe0fDuration: 15'</p> <p>\ud83d\udcda Prerequisites: A-ASP: Accessibility starting point</p>"},{"location":"A-FNA/#when-to-use","title":"When to use ?","text":"<p>This module gives both a statistical overview of accessibility, the opportunity to experience the need of its presence and how dreadful its absence can be.</p>"},{"location":"A-FNA/#description","title":"Description","text":""},{"location":"A-FNA/#1-introduction","title":"1. Introduction","text":"<p>Accessibility is absolutely crucial. In fact, according to a study from Statistics Canada, 27% of all Canadians have at least one disability. This number increased of 4.7 percentage points between 2017 and 2022.</p> <p>More globally, according to the World Health Organization, 16% of the world\u2019s population experience significant disability.</p> <p>While disabilities and their experiences are varied and overlap each other, letting the trainees try their application with a screen reader can be a good starting experiment for you to get a sense of how crucial it is.</p>"},{"location":"A-FNA/#2-try-it-out","title":"2. Try it out!","text":"<p>On different platforms, taking turns, each participant is put in front of a device connected to a screen in their back. All the trainees can see the application\u2019s screen but the one using it.</p> <p>They must then try to execute a task like changing a specific setting or writing a message to a contact, without seeing the app nor using a mouse. At the end of this small workshop, they are invited to debrief on how they felt and what the main blockers were.</p> <p>Tip</p> <p>On an application that recently had strong accessibility improvements, this experience can me made twice: firstly with the now fairly accessible version and then with the old one.</p>"},{"location":"A-FNA/#3-the-systemic-failure-of-software-accessibility","title":"3. The systemic failure of software accessibility","text":"<p>This section will mainly be based on the the WebAIM Million 2025 report on the accessibility of the top 1,000,000 home pages. It only includes web pages, but as we will see later, resources about the state of desktop and mobile accessibility are few. We can make the hypothesis that while not completely similar, both web pages and applications must be navigated with the same assistive technologies, and therefore share similar trends of evolution.</p> <p>The WebAIM collective states that \u201cAcross the one million home pages, 50,960,288 distinct accessibility errors were detected\u2014an average of 51 errors per page\u201d.</p> <p>Their graph depict the evolution of the average number of detectable errors for home pages.  Failures typically include missing labels, low contrast text or missing alternative captions for images.</p> <p></p> <p>Home pages tend to get more and more complex. While some websites are getting more accessible, those who don\u2019t tackle the issue tend to get even worse. Examples of greatly accessible websites are rare. Indeed, \u201c94.8% of home pages had detected WCAG 2 failures.\u201d</p> <p></p> <p>On this graph coming from the same study, you can see the evolution of the number of elements on home pages has been increasingly steadily over the past few years.</p> <p>You might be wondering, what are the most common accessibility shortcomings detected ? This chart is a good starting point to tackle the most obvious issues that our applications and websites might have.</p> <p></p>"},{"location":"A-FNA/#4-wrapping-up","title":"4. Wrapping up","text":"<p>As we saw through this module, despite being a crucial need for at least 20% of all users, accessibility as it is implemented on common websites and applications are overwhelmingly insufficient. With that said, accessibility isn\u2019t about lowering those stats of detected failures, it\u2019s about making sure that we are not contributing in isolating and marginalizing whole communities.</p> <p>Until now, we only mentioned accessibility and disability as vague concepts, but understanding and feeling what they mean conceptually is key to concretely improve your software.</p> <p>So\u2026 what exactly is accessibility ?</p>"},{"location":"A-FNA/#sources","title":"Sources","text":"<p>WebAIM: The WebAIM Million - The 2025 report on the accessibility of the top 1,000,000 home pages</p> <p>Word health Organisation: Disability</p> <p>New data on disability in Canada, 2022</p>"},{"location":"B-DSU/","title":"\ud83e\udd3a B-DSU: Developer stance &amp; user collaboration","text":"<p>In this module</p> <p>When creating, finding the right stance can be perilous;     - How to help without infantilizing ?     - How to care without assuming one's needs ?     - How to design for something we don't experience ?</p> <p>This module aims at finding answers to those questions from a software perspective.</p> <p>\u26f3\ufe0f Section: B. From accessibility to inclusiveness</p> <p>\ud83d\udc65 Audience: Everyone</p> <p>\u23f1\ufe0f \ufe0fDuration: 10'</p> <p>\ud83d\udcda Prerequisites: None</p>"},{"location":"B-DSU/#when-to-use","title":"When to use ?","text":"<p>This module tries to provide the trainees with a reflection on what one's perspective on the world is and how to attempt to account for other's ones.</p>"},{"location":"B-DSU/#description","title":"Description","text":""},{"location":"B-DSU/#who-are-you","title":"Who are you ?","text":"<p>Who are we as people ? We all have a singular, partial perspective of the world. These comes with biases but also insights and experiences. Opening up to different views is always a tough process. In Developing Inclusive Mobile Apps, Rob Whitaker gives an exercise to identify our biases. The following workshop is a variation adapted from theirs.</p> <p>Provide a piece of paper to all of the trainees attempting the training. Ask them to make a list of five person the 5 peoples they trust the most, people they would go to for advices (no matter whether they are colleagues, family or friends). Once that's done, ask them to count a point each time the answer to the following questions is yes.</p> <ol> <li>Are all of them of the same ethnicity as you ?</li> <li>Do all of them have the same sexual orientation ?</li> <li>Do all of them have the same nationality as you ?</li> <li>Are all of them considered able-bodied ?</li> <li>Do all of them have a diploma (or, are pursuing one) ?</li> <li>Are all of them cisgender ?</li> <li>Are all of them working/studying or being retired ?</li> <li>Are all of them from the same or higher economic background as you ?</li> <li>Are most of them men ?</li> <li>Do they all speak the language of the country they live in ?</li> </ol> <p>Once that's done, count from 1 up to 10 and ask the trainees to raise their hand on the number corresponding with their score. Precise this part of the workshop is entirely optional. To ease of trainees you can also raise your hand on the number corresponding to your own results. This should help the group to start reflecting on their own biases. Note that you can adapt those questions to fit the cultural environment in which you give this formation.</p>"},{"location":"B-DSU/#who-is-disabled","title":"Who is disabled ?","text":"<p>Who exactly is disabled is a question with no evident answer. According to the 2024 study of the APPT foundation, a non profit based in the Netherlands, 61% of Dutch Android users and 45% of Dutch iOS users have one or more accessibility settings activated on their phone. A quarter of the Android user they surveyed used two or more accessibility features.</p> <p></p> <p><sub>Source: APPT Foundation, Accessibility Statistics 2024</sub></p> <p>Disability is not something easy to categorize. A lot of disabilities are not visible, some develop over time, other have varying effects that make them hard to apprehend. A lot of people, thinking of themselves as able-bodied will use a bigger font on their phone. The frontiers between someone without any disability who has glasses and someone with low vision is very hard to establish. As stated in the book Developing Inclusive Mobile Apps, by Rob Whitaker:</p> <p>Rob Whitaker, Developing Inclusive Mobile Apps</p> <p>Disability is not a binary state. We all have \"abilities and limits to those abilities. Disability happens when we have built something that doesn\u2019t work for someone with particular skills.</p> <p>In fact, it could even not be desirable to draw this line. Ashley Shew states in Against Technoableism: rethinking who needs improvement:</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>Today, many of our ideas about able-bodiedness and disability come from classifications based on who is suitable for plantation or factory work: we call people \u201cdisabled\u201d when they can\u2019t perform \u201cnormal\u201d amounts of physical labor. [...] Disability has not always been as deeply tied to the ability to do labor as it is now. As Kim Nielsen\u2019s A Disability History of the United States shows, many Native American cultures had more room for variation and a different sense of health and wellness; disability was (and is) not stigmatized in the same ways among some Native American groups **(and, incidentally, many Native languages have no word for \u201cdisability\u201d as a category). Nielsen explains how Plains Indian Sign Language (the most well documented of Native sign languages), for instance, was used by various Plains tribes as a common language of trade\u2014so signed language was a natural part of culture and language such that communication norms allowed more easily and naturally for deaf inclusion.</p> <p>Depending of the circumstances, we are all disabled and we will all be. As stated previously, disability is plural, a shallow category that shouldn't negate intersectional thinking.</p>"},{"location":"B-DSU/#who-do-you-want-to-be","title":"Who do you want to be ?","text":""},{"location":"B-DSU/#disability-experts-and-disabled-experts","title":"Disability experts and disabled experts","text":"<p>In Against Technoableism: rethinking who needs improvement, Ashley Shew also writes extensively about expertise on accessibility. While disabled experts are often not taken seriously, some of their able-bodied peers consider themselves experts at understanding one's needs. She states:</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>Throughout, I consider disabled people the experts about disability. I\u2019m no longer interested in what so-called experts (nondisabled scientists, physicians, therapists, and so on) have to say. These narratives are already overrepresented, and in some cases, they have done damage to disabled people as a community, disabled people as knowers, and the experience of disability as valid and valuable. When we don\u2019t listen to those with actual experience, we often get accounts of disability and technology completely wrong. Disabled people are \u201cthe real experts\u201d (the title of Michelle Sutton\u2019s 2015 edited volume about and authored by autistic people) when it comes to technology and disability. We use technologies. We also reject them, grapple with them, or repurpose them. The views on technology we get from listening to disabled people often look very different from those of people educated in the medical and \u201chelping\u201d professions.</p> <p>We cannot replace the perspectives of people with disabilities simply by reading about them or running a series of automated tests. We highly encourage recruiting people from diverse backgrounds in your team. The whole project will benefit from varying perspectives and it could help to leverage against systemic exclusion and hiring discriminations which affect minorities. In fact, a study from the Chartered Institute for IT states that in the UK alone, \"Nearly 90,000 disabled people are 'missing' from tech industry\".</p> <p>But your working environment will never be representative of the whole world and every user. As quoted from Developing Inclusive Mobile Apps in \ud83d\udd2d B-INO Inclusive needs overview :</p> <p>Ashley Shew, Against Technoableism, Rethinking Who Needs Improvement</p> <p>\u201cEmploying the word \u201cusers\u201d can result in falling into the trap of thinking of users as one group\u00a0\u2013 an amalgamation of people who are out there somewhere in the world using your app, a group of people that you\u2019ll never meet and never know. This form of \u201cgroup think\u201d leads to creating a \u201cone-size-fits-all\u201d solution that, like everything claiming to be \u201cone size fits all,\u201d in reality fits no one.\u201d</p>"},{"location":"B-DSU/#embracing-diversity","title":"Embracing diversity","text":"<p>As we need to embrace diversity, it is crucial to fight a natural urge of all software creators: the will to personally find, design, and implement the solution to every problem. There is no one solution, and if there were, you would probably not be the one to find it. Your role as a software builder is to reach out to the real accessibility experts: those who rely on accessibility and experience its flaws every day, i.e. people with disabilities. Therefore, rather than trying to produce a \"perfectly accessible\" and inclusive product, we would rather suggest to try and make the main features as inclusive as possible and then get feedback from diverse users on what are their main issues with your software are.</p> <p>It's likely that your anticipation of their needs will not match their experience. Maybe you've spent hours making a video calling feature accessible for low vision users when they mostly struggled with the button for sending messages not being labeled as such, a fix that would have taken you a few minutes. Let them, the real experts, guide your priorities. Nothing about them without them.</p> <p>This does not mean your role in the feedback process is passive. Providing the space for people to give feedback is the cornerstone of that process. Consider setting up a dedicated form, type of issue, or even email for these topics. Even if it is already technically possible to share those issues via your current channels, creating a specific one show your intention of treating and valuing them.</p> <p>This does not mean either that your expertise is useless if you are not experiencing the discriminations for which you are assessing your products. As you know the product you are building and what experience you are aiming for, you - as a product engineer, designer, or even developer - will be necessary to understanding what can be enhanced. For example, users with low vision or who are blind cannot give feedback on elements of the interface they ignore. If an element is not reachable, they may not be able to tell you that it's not accessible, as they have no way of knowing its existence. The best way of tackling those issues is by directly looking at them using the application. It's only at the intersection of your two expertise that an understanding of what goes wrong can emerge. And this is why we recommend testing next to the user which is the best way to understand how your product is being used! This will avoid you getting some feedback like: \"sometimes when creating an account, my screen reader stops working\" - an unclear issue which is yet the best that can be given to you.</p>"},{"location":"B-DSU/#sources","title":"Sources","text":"<p>Whitaker Rob. Developing Inclusive Mobile Apps, Building Accessible Apps for iOS and Android, 2020.</p> <p>Shew Ashley, Against Technoableism: rethinking who needs improvement. 2023</p> <p>The Chartered Institute for IT, Nearly 90,000 disabled people are 'missing' from tech industry, says professional body. 2024</p>"},{"location":"B-IAP/","title":"\u2697\ufe0f B-IAP: Bring inclusiveness and accessibility to your pipeline","text":"<pre><code>This module gives guidelines and advice on how to incorporate inclusiveness into your organization's workflows.\n</code></pre> <p>\u26f3\ufe0f Section: A. What is accessibility ?</p> <p>\ud83d\udc65 Audience: Everyone, especially managers</p> <p>\u23f1\ufe0f \ufe0fDuration: 15'</p> <p>\ud83d\udcda Prerequisites: None</p>"},{"location":"B-IAP/#1-incorporating-inclusiveness-into-your-workflows","title":"1. Incorporating inclusiveness into your workflows","text":"<p>The structure of your workflows shape the application you are delivering. By explicitly incorporating accessibility and inclusiveness throughout your  design and development pipeline, you are making sure that you and your team are actively working towards an application that will be usable and welcoming to everyone.</p> <p>Accessibility and inclusiveness are complex topics that can be tricky to incorporate into your structure's habits and processes, especially with varying team compositions and scales. As small structures have less time and lighter processes, heavy accessibility workflows as used at industrial scale are likely not to be compatible with your structure if you are a small team building FOSS (Free and Open Source Software).</p> <p>But this agility can be used at your advantage by picking and choosing some practices that might fit the way your work. In this module, we'll cover some practices you can adopt and brainstorm together on the ways we could incorporate inclusiveness into your workflows.</p>"},{"location":"B-IAP/#2-accessibility-and-inclusiveness-essentials","title":"2. Accessibility and inclusiveness essentials","text":"<p>In this section, we'll cover essential steps towards an inclusive app.</p> <p>1. Have inclusiveness in mind since the ideation</p> <p>When coming up with a new feature for your app, ask yourself: what are some possible accessibility and inclusiveness challenges for that user experience? Are there elements we can anticipate from the design?</p> <p>2. Make it a goal for your designs</p> <p>Good design is inclusive. And good design benefits everyone. To get concrete insights about what's an inclusive design, check out the \ud83c\udfa8 D-IDE: Inclusive design 101 module.</p> <p>3. Iterate on implementation</p> <p>Inclusiveness is a process. You will probably not get it right the first time. Testing and tweaking the experience until you reach a result you are satisfied with can take time.</p> <p>We provide some detailed implementation advice in \ud83d\udc69\u200d\ud83d\udcbb E-ICO Inclusive code 101.</p> <p>4. Test</p> <p>Testing is a crucial part in the process of making a feature inclusive. Refer to the \ud83e\udd3a B-DSU: Developer stance &amp; user collaboration module for considerations on how to get feedback from testers.</p> <p>5. Get user feedback</p> <p>Getting user feedback is essential, especially when it comes to accessibility and inclusiveness. This can be done by actively requesting community feedback. Additionally, we highly recommend creating an issue template for accessibility, and encouraging users and developers to create them when encountering an issue. This will nudge the whole team to regularly pick up those issues, once they're in the backlog.</p>"},{"location":"B-IAP/#3-having-an-inclusivenessaccessibility-coach","title":"3. Having an inclusiveness/accessibility coach","text":"<p>With this in mind, how do we make sure that these steps are taken? While there are many ways, one is given in the Agile Accessibility Handbook.</p> <p>The author suggests that every team has their accessibility coach. This person should be especially knowledgeable and empathetic regarding accessibility, but is not required to be an expert nor to work full-time on the subject. They will not be doing all of the accessibility work. Rather, they are the ones who monitor with other developers the progress of the current accessibility roadmap. Even if your structure has a product manager who is willing to do this job, the accessibility coaches can also have a great impact by bringing knowledge on how to architecture accessibility on their platform. They are the one responsible of making sure that accessibility is a constant thought through every step of development within their team.</p> <p>The coaches of every team can meet regularly with the product manager (if there is one) to coordinate and update the accessibility roadmap of the application. They also can organize monthly meetings with all of their teams to report on the improvements, blockers and perspectives. The main goal is to normalize accessibility and inclusiveness as routine parts of development.</p>"},{"location":"B-IAP/#4-building-empathy","title":"4. Building empathy","text":"<p>Empathy is an absolute requirement for your team to get involved in the process of making your application inclusive. As stated in \ud83e\udd3a B-DSU: Developer stance &amp; user collaboration, we all have a singular, partial perspective of the world. These comes with biases but also insights and experiences. It's likely that most persons working in your structure will have limited living experiences of disability. This can lead to an \"empathy gap\" (as called in Barrell's book) where accessibility and inclusiveness feel like remote and niche preoccupations. Therefore, it's crucial to build empathy by helping workers to embrace diversity.</p> <p>This can be done by discussing with diverse users and experts, regularly communicating internally on the subject (for example, by sharing stories of users who took advantage of the inclusiveness of your app) or by hosting events where team members can try and use your app with assistive technologies or simulated disabilities, and reflect on what could be improved.</p>"},{"location":"B-IAP/#wrapping-up","title":"Wrapping up","text":"<p>At the end of the day, incorporating inclusive practices to your workflows really comes down to trying what works best for your team, picking and choosing some ideas that organizations use daily.</p> <p>If you want to learn further on this topic, the Agile Accessibility Handbook mentioned previously is a very solid starting point, tackling big picture transformation processes as  well as small-scale team practices.</p>"},{"location":"B-IAP/#sources","title":"Sources","text":"<p>Barrell, Dylan. Agile Accessibility Handbook. Amplify Publishing, 2020.</p>"},{"location":"B-INO/","title":"\ud83d\udd2d Inclusiveness needs overview","text":""},{"location":"B-INO/#b-ino-inclusive-needs-overview","title":"\ud83d\udd2d B-INO Inclusive needs overview","text":""},{"location":"C-WDU/","title":"\ud83e\udec2 C-WDU We are all disabled and unique : accessibility, plurality and intersectionality","text":"<p>In this module</p> <p>We will explore the concepts of intersectionality and inclusiveness and it\u2019s use in software development</p> <p>\u26f3\ufe0f Section: D. Designing inclusive and accessible software</p> <p>\ud83d\udc65 Audience: Designers</p> <p>\u23f1\ufe0f \ufe0fDuration: 30'</p> <p>\ud83d\udcda Prerequisites: Accessibility, inclusion &amp; exclusion, We are all disabled and unique</p> <p>\ud83d\udcd6 Is a prerequisite to: None</p>"},{"location":"C-WDU/#when-to-use","title":"When to use ?","text":"<p>This module is necessary to deconstruct the idea that accessibility is merely about designing for users who can't see or hear.</p>"},{"location":"C-WDU/#inclusiveness-and-co-creation","title":"Inclusiveness and co-creation","text":""},{"location":"C-WDU/#who-is-disabled","title":"Who is disabled ?","text":"<p>Since the beginning of this training, we have been referring to the disabled people in the 3rd person, as if they were \"others\". The truth is, some of us writing this are disabled, some of you reading this are, as we all will be some day. The barrier between the able-bodied and the disabled is a lot more porous than we could think at first glance.</p> <p>Many people who think themselves as able-bodied use the zoom feature in order too have bigger text. People who have a hard time using new technology are also a core target for accessibility features, like simplified UI.</p> <p>The line blurs further once we realize that accessibility features are useful to everybody no matter what. VIM users are the first ones to profit from good keyboard navigation. Many people use subtitles on a daily basis when commuting. Mobile \"gesture typing\" started out as an accessibility feature.</p> <p>While this convenience for some is surely necessary for others, we can appreciate that these categories - disabled and able-bodied - are rather arbitrary and that no clear boundary can be drawn.</p> <p>Therefore, it's crucial to not think disabled peoples as a minority but rather as the living diversity that we will all become.</p>"},{"location":"C-WDU/#what-is-inclusiveness","title":"What is inclusiveness ?","text":"<p>The Cambridge dictionary would define inclusiveness as : \"\"\" Quote \"Cambridge dictionary\"     the quality of including many different types of people and treating them all fairly and equally</p> <p>Inclusiveness is a core concept when talking about diversity. It's often a preferred term to accessibility that is rather limited to the inclusion of people with disabilities. It highlights that we need to be designing and programming not only for accessability but also for the ever-varying pluralities of human experiences and discriminations. In simpler words, not being ableist is not enough. We must make sure that we are also not perpetuating other kinds of oppressions. For example, using gender-neutral language and icons when referring to a user, and not having fixed first and last name fields can help people from various backgrounds feel welcome in the space you are creating with your app.</p> <p>While keeping this in mind represents an important leap in inclusiveness of your product, understanding how discriminations are related to each other is crucial to being inclusive and understand your users. There is no inclusiveness without intersectionality. That is why the rest of this module will be dedicated to it.</p>"},{"location":"C-WDU/#intersectionality-and-plurality-of-experiences","title":"Intersectionality and plurality of experiences","text":""},{"location":"C-WDU/#what-is-intersectionality","title":"What is intersectionality ?","text":"<p>In Mapping the Margins: Intersectionality, Identity Politics, and Violence against Women of Color, Kimberle Crenshaw defines intersectionality to address an issue she encountered as an jurist in the late 80\u2019s in the US. When filling in cases about discriminations in work environment, lawyers must select the discrimination that their client is facing (for example, racism or sexism).</p> <p>This is where Crenshaw had a problem: some of her clients were black women, whose cases were dismissed because their employer had hired white women and black men, and therefore could protect themselves from accusations of sexism or racism.</p> <p>That is why Crenshaw defined intersectionality as a framework for understanding specific living experiences of people situated at the intersection of discriminations and privileges. In her case, that was to showcase the specific oppression that black women lived, that could not be explained by sexism and racism. The intersection of the \u201cblack\u201d and \u201cwomen\u201d oppressions produced a new specific one, different of the addition of the two.</p>"},{"location":"C-WDU/#intersectionality-in-software","title":"Intersectionality in software","text":"<p>What do we need the concept of intersectionality for in software development ?</p> <p>It\u2019s actually very useful, for two main reasons !</p> <ul> <li> <p>The proportion of users with disabilities who happen to have more than one is important (17.7% in 2016). Thinking about designing for one disability leaves out a blank spot for users having that disability but also other conditions. For example, deaf users with low vision are often overlooked when thinking about accessibility. We will take a closer look at the appropriate stance to account for diversity in Developer stance &amp; user collaboration</p> </li> <li> <p>It\u2019s a common bias to forget that disabled people are not just disabled, but first and foremost people with their own unique life experiences and specificities. We need to think about disabled women, disabled queers, disabled Arabs and those who are all of that at once!</p> </li> </ul> <p>Certain issues only arise for people with a specific intersectional background.</p> <p>Take for example this main account creation page. If you ask someone that you know with vision to test it or do it yourself you probably won't find any issue. Can you guess what kind of users can have trouble with it.</p> <p></p> <p>This one was hard and required a lot of intuition. The \"user interface language\" label and the actual combo box looks like two separate elements, because they are, making them inaccessible as is with keyboard navigation. If you speak a niche language and are low vision you cannot access the combobox to change it to a language that you speak.</p> <p>Therefore, a low vision, english speaking user will not encounter any issue on this page and might consider it totally accessible while a non-english speaking one will encounter issues navigating it.</p> <p>This can be fixed by adapting to your system language dynamically.</p> <p>Another intersectional example is presented to us by Apple in their The practice of inclusive design video. They encountered this issue when developing a system capable of automatically generate descriptions of images for low vision users using a generative AI models. Can you guess what it is?</p> <p> The accessible text of the previous image of this page (the account creation page) as seen in the markdown</p> <p>The model generating descriptions had the tendency to assign gender to people on the images it was captioning, therefore regularly misgendering cis, trans and especially non-binary people. This issue encountered by those at the intersection of the low vision and queer community prevented them from affirming their identity and feel welcome.</p> <p>The solution that Apple chose to adopt was to train their model to concentrate on other elements of an image, like the clothes that a person is wearing, their facial expression or where they are standing. By avoiding oppressive biases, the model ended up being better for all users.</p>"},{"location":"C-WDU/#sources","title":"Sources","text":"<p>Crenshaw, Kimberle. \u201cMapping the Margins: Intersectionality, Identity Politics, and Violence against Women of Color.\u201d Stanford Law Review, vol. 43, no. 6, 1991, pp. 1241\u201399.</p> <p>Kohzuki M. Multimorbidity and Multiple Disabilities: Present Status and the Roles of Rehabilitation. J Clin Med. 2024 Oct 23;13(21):6351.</p> <p>Apple. \"The practice of inclusive design\". Accessed the 17 July 2025</p> <p>Cambridge's dictionary's definition of inclusiveness</p>"},{"location":"D-IDE/","title":"\ud83c\udfa8 D-IDE: Inclusive design 101","text":"<p>In this module</p> <p>This module aims at giving accessibility and inclusiveness essentials for app design.</p> <p>\u26f3\ufe0f Section: D. Designing inclusive and accessible software</p> <p>\ud83d\udc65 Audience: Designers</p> <p>\u23f1\ufe0f \ufe0fDuration: 30'</p> <p>\ud83d\udcda Prerequisites: Accessibility, inclusion &amp; exclusion, We are all disabled and unique</p>"},{"location":"D-IDE/#when-to-use","title":"When to use ?","text":"<p>This module should be used with trainees who are in position of making design decisions for the product they are working on. It is mostly intended for product designers and managers, but it is relevant in some scenarios to also include developers, especially for smaller teams.</p>"},{"location":"D-IDE/#description","title":"Description","text":""},{"location":"D-IDE/#what-is-an-inclusive-app","title":"What is an inclusive app ?","text":"<p>Using the Cambridge's dictionary's definition, we defined inclusiveness as the quality of including many different types of people and treating them all fairly and equally. From there, we have to ask ourselves: what is an inclusive app?</p> <p>Put simply, we can define an inclusive application as one that can not only be used completely, comfortably and safely by all users, but also in which they can all thrive, feel welcome and express themselves.</p> <p>It is thus crucial for designers and product leads to always keep in mind that the features, contents and interfaces they design won\u2019t be seen, understood, felt or actioned the same by users, depending on the plural and dynamic human characteristics that structure their representations and interactions with their environment.</p> <p>Making an inclusive app is thus taking care of everyone, including minorities.</p> <p>For every feature, every interface, every content that you are building, always ask yourself : is this element inclusive ? Are there human characteristics that could prevent a user from understanding, interacting, or even feeling well with the provided content ?</p> <p>Here is a non-exhaustive list of human characteristics to keep in mind in order to include as many people as possible :</p> <ul> <li>Age</li> <li>Culture</li> <li>Education</li> <li>Ethnicity</li> <li>Gender, gender identity</li> <li>Historical context</li> <li>Language</li> <li>Physical and cognitive (dis)abilities</li> <li>Sexuality</li> <li>Socio-economic context</li> </ul> <p>Though these categories can be useful to get an idea of common characteristics often leading to discrimination, we should not see them as a checklist of requirements to be accessible.</p> <p>Moreover, human experiences are complex and evolving as they always emerge from intersections of those characteristics.</p> <p>Consequently, building an inclusive app is all about staying up to date and actively open to feedback, knowing that we can never reach perfect inclusiveness while doing our best to get there.</p>"},{"location":"D-IDE/#designing-for-inclusiveness","title":"Designing for inclusiveness","text":"<p>While implementation plays an important role in the inclusiveness, and especially the accessibility of applications, the designers and product leads hold an important responsibility in the process of building an experience that will resonate and be welcoming to the widest range of users possible.</p> <p>Product design documents, including specifications, user stories and prototypes act as the team\u2019s compass for delivering awesome products. That is why having inclusiveness in mind from the design is absolutely essential. You don\u2019t ever have to \u201cmake this feature accessible\u201d if it is built from the ground up with inclusiveness in mind.</p> <p></p> <p>You can see on this picture a bridge that, at first, might seem ordinary. Can you guess what\u2019s wrong with it ? In Do artifacts have politics ?, Langdon Winner explains that those bridges on Long Island were built low, so that buses were too high to pass them. Therefore, people who did not have a car - the least wealthy, and especially African-Americans - were denied access to the parkway to the public beaches. A technical segregation.</p> <p>And the same goes with software: if a messaging app denies access to some features to groups of users, it excludes them by preventing them to connect.</p> <p>Designers can have a great impact on the inclusiveness of their product. By keeping in mind that their design choices always impact someone somewhere, and likely whole communities - or intersection of them - it is possible to shape tools that strive to respect and acknowledge diversity, which is as the core of humanity.</p>"},{"location":"D-IDE/#what-is-an-inclusive-user-interface-iui","title":"What is an Inclusive User Interface (IUI)?","text":"<p>An important part of making an app inclusive is to make the UI as accessible to the widest range of people as possible.</p> <p>As we said earlier, we ideally don\u2019t \u201cmake an interface accessible\u201d. Rather, we design interfaces to be accessible, so that they support as many ways as possible of interacting with your app.</p> <p>Alternative, underlying UIs that are built for \u201cdisabled\u201d people are often referred to as Accessible User Interfaces (AUI), sometimes as accessibility tree. At first, this concept seems very useful, because thinking of accessibility this way pushes us to make intended and meaningful design choices for how our apps should be accessed using various assistive technologies, font sizes, settings, etc, and to think of accessibility with a wider approach than just adding labels to buttons. It\u2019s about designing a whole new UI - an AUI, separate from the one most users will use.</p> <p>That said, from our perspective, thinking UI and AUI as two distinct interfaces does not make sense, because :</p> <ul> <li>Most users never access an app using only the UI or the AUI. For example, someone who can see but cannot touch the screen might use a switch as input but still use the visual interface to perceive the content. Moreover, many people considering themselves as \u201cable-bodied\u201d still use some accessibility features on their devices - like custom font sizes or accessibility gestures used by power users.</li> <li>As seen in We are all disabled and unique : accessibility, plurality and intersectionality, thinking of users as people working with various sets of abilities rather than belonging to one of the \u201cdisabled\u201d or \u201cable-bodied\u201d categories better reflects the wide range of experiences you are inevitably creating when building your app.</li> <li>AUI as a concept completely forgets inclusiveness and intersectionality, as it draws a strict line between the \u201cable-bodied\u201d and the \u201cdisabled\u201d.</li> <li>AUI can also create a pitfall, pushing developers to create the UI first, and then deriving an AUI from it, which makes the concept unhelpful.</li> </ul> <p>We thus prefer to think an inclusive user interface (IUI) as a whole UI that maximizes the different ways it can be interacted with, in order to allow the greatest variety of particular experiences and to satisfy as many needs as possible.</p> <p></p> <p>From a designer\u2019s perspective, this means your interface should embed a wide set of equal ways of interacting with your app.</p>"},{"location":"D-IDE/#designing-an-iui","title":"Designing an IUI","text":"<p>Now, how do you concretely make an IUI ?</p> <p>It is important to know that there is no unique way of designing inclusive interfaces, and that it is a slow and continuous work, rather than a one-time effort. Inclusiveness recommendations can never be exhaustive.</p> <p>With that said, here is a non-exhaustive list to start with to make your app more inclusive:</p>"},{"location":"D-IDE/#the-colors-are-contrasted","title":"The colors are contrasted","text":"<p>The most common and easiest to apply advice that is given to designer is to make sure the colors they use are contrasted. This is important not only for people who are colorblind or use a screen filter, but also to guarantee readability on as many screens and conditions as possible. Many tools like Figma plug-ins or websites can help you check if your colors are well contrasted, or even look for contrast errors in your designs.</p> <p></p>"},{"location":"D-IDE/#the-colors-are-not-necessary-to-understanding-the-ui","title":"The colors are not necessary to understanding the UI","text":"<p>Colors are a great way to quickly convey information. Nevertheless, some people can\u2019t or prefer not to rely on colors to identify content. Consequently, informations given by the UI should never only be conveyed through colors. For example, to indicate success of an operation using a green circle is not accessible. Rather, consider using a pictogram that will also be understandable without needing to see colors.</p>"},{"location":"D-IDE/#the-layout-is-responsive-to-custom-font-sizes","title":"The layout is responsive to custom font sizes","text":"<p>Some people need or prefer having on their devices custom (typically bigger) font sizes. When applications are not designed or implemented with this adaptability in mind, content can be hidden and the app can become unusable.</p> <p>There usually is not pre-made answer on how to adapt the UI, but the issue can typically be solved by working on an alternate layout. For example, a common fix for cropped content (especially text) is to conditionally replace de horizontal stacks by vertical stacks, saving horizontal room for the text.</p> <p></p> <p>A lot of implementation frameworks provide easy ways to set a preferred size for an element, providing adaptation for scaling change.</p>"},{"location":"D-IDE/#the-content-can-be-accessed-using-assistive-technologies","title":"The content can be accessed using assistive technologies","text":"<p>1 - Grouping the elements</p> <p>For people who use screen readers and/or the keyboard to navigate your app, it is crucial to have the information grouped at the right level of granularity.</p> <ul> <li>If the information is too fragmented, navigating will be slower (as it will need more user inputs) and context might be lost (as the logical link between elements will not be given for people who can\u2019t see the information hierarchy on the screen).</li> <li>If the information is grouped at a higher level than it should, navigating to a specific element will be harder and interactions will likely be more complicated due to the fusion of actions.</li> </ul> <p>While it certainly depends on the experience you are building and the platform you are targeting with your design, some good practices to start grouping your elements are :</p> <ul> <li>Elements that make a contextually atomic group, i.e. a group of elements for which we lose context if they are separated, must be grouped.</li> <li>Elements that share the same primary action are typically grouped. Elements that have a diverging primary actions should not be grouped, unless you can elect one primary action and demote the other to secondary.</li> <li>Each element of a collection view should be a group.</li> </ul> <p>Mobile and desktop navigation are quite different regarding this topic. While mobile apps typically rely technically on \u201caccessibility elements\u201d that can be grouped, desktop apps rely on focusability of specific parts of the interface. From a design perspective, this does not change significantly the way we should think about grouping, but it\u2019s important to keep in mind the implementation can vary drastically, making it important to guide developers and iterate towards the targeted experience.</p> <p>2 - Labelling the elements</p> <p>Labelling the elements of your app is critical to ensure the understanding of the interface and content. The term \u201clabel\u201d can have different implementation meanings depending on the platform or framework used. Here, we will use label to refer to the sentence that is typically read aloud by screen readers, including the type of the content, the value, etc. Frameworks and platforms typically use structured data to then generate what we call here a label.</p> <p>A good label must :</p> <ul> <li>Reflect the context or type of content you are presenting to the user.</li> <li>Tell the actual content (or value) of the element, or its alternative text if it is visual.</li> <li>Let the user know if it is actionable.</li> <li>Contain all the information a user who can see would have at disposal.</li> <li>Be clear and require no more context to be understood.</li> <li>Have the informations ordered with care to put the most important elements first, allowing users to navigate through the app rapidly without waiting for the full label to be read out loud if they don\u2019t need to.</li> </ul> <p>For a messaging app, a label for a discussion can be :</p> <pre><code> \"Michel Berger. 3 unread messages. You said : Thanks ! at 9:07. Message status : sent. Pinned. Actions available.\u201d\n</code></pre> <p>Again, depending on the platform or framework, the ways to achieve this might differ. We will tackle this issue in platform-specific modules.</p> <p>3 - Establishing a focus order</p> <p></p> <p>When your elements are grouped and labelled, the last step to make your interface accessible to people who use assistive technologies and/or the keyboard to use your app is to decide the focus order.</p> <p>Let\u2019s say we are working on an application implementing a chat. When entering a discussion, which element should be focused first ? The last message, the title of the discussion, the text input ?</p> <p>There often is no way of predicting which answer is the best. It really comes down to testing what is the most navigable, understandable and interactable.</p> <p>In this case, we would typically focus the last element of the discussion first, because it is typically the one of interest, and because it gives a quick access to the text input. But this is clearly a design choice that must be well-thought and tested in the context of your app.</p>"},{"location":"D-IDE/#the-ui-is-simple-and-intuitive","title":"The UI is simple and intuitive","text":"<p>A simple and intuitive UI benefits everyone. But while this might be a convenience for most users, this is a need for some of them. Wether due to cognitive disabilities or the use of assistive technologies, having an interface that is as simple and less cluttered as possible will instantly make it more accessible and inclusive!</p>"},{"location":"D-IDE/#the-ui-has-options-to-prevent-motion-sickness","title":"The UI has options to prevent motion sickness","text":"<p>Some people experience motion sickness when looking at animations. Some platforms allow the developers of third party apps to know whether the user as activated a setting reducing motion. It\u2019s a good idea to include an annotation (we will tackle annotations more globally in TODO) letting the developers know when there is a know trigger to be optionally deactivated. Known triggers include:</p> <ul> <li>Zooms</li> <li>Flashing or blinking</li> <li>Animations playing automatically without user interaction</li> <li>Parallax effects</li> </ul>"},{"location":"D-IDE/#the-ui-adapts-well-to-other-cultures","title":"The UI adapts well to other cultures","text":"<p>A good design should be intuitive to everyone. While it\u2019s difficult to see, our design choices always rely on our cultural background, which is not always shared by all users. There are many subjects to pay attention to while designing in order to make your interface feel as home for as many people possible. While it is impossible to cover everything in this module, here are some of them to start with:</p> <p>Language</p> <p>Supporting as many languages and dialects as possible makes it possible to many more people to use your app with ease. Organizations open-sourcing their code can consider relying on the community to help give feedback on localization of their apps. Make sure to also open support to dialects.</p> <p>Right-to-left support</p> <p>Many languages are written from right to left. While most frameworks and platforms provide automatic RTL support, it is important to check that elements of the interface, particularly the custom ones, are rearranged accordingly. Keep in mind that does not only apply to text alignment, but also to navigation, icons, layout, charts, etc. We will not detail everything here but you can find here the Apple right to left guidelines that are very detailed.</p> <p></p> <p>Colors</p> <p>Depending on the culture, colors can have many different meaning. The most outstanding example is certainly the case of green and red. While in most countries of the western world, green is rather positive and red negative, these colors are generally used to mean the opposite in China.</p>"},{"location":"D-IDE/#users-age-gender-identity-sexuality-ethnicity-etc-are-not-assumed","title":"User\u2019s age, gender identity, sexuality, ethnicity, etc. are not assumed","text":"<p>A bias that we can have as humans is to assume others\u2019 characteristics based on what we see around us. And as designers, we want our interfaces to feel welcoming for everyone. This is why paying attention not to assume any human characteristics or stereotype is essential when building an app. Here are some examples:</p> <p>Content representing people and activities</p> <p>In your app\u2019s content and illustrations, be sure to include different ethnicities, body types, gender expressions, etc. when depicting people.</p> <p>Make sure you also include a good variety of relatable activities and cultural references in textual examples, illustrations, etc.</p> <p>Gender identity &amp; expression</p> <ul> <li>If your app asks for a user\u2019s gender, make sure to provide more options that just male and female, and to add support for custom entries.</li> <li>Avoid using the \u201chis\u201d or \u201cher\u201d pronouns when it is not necessary. If your app needs to, be sure to ask users which pronouns they use.</li> <li>When depicting a human, use gender-neutral icons rather than a man or a woman.</li> <li>If your app requires a legal name, make sure to leave the possibility open to use a preferred name. In general and if possible, it is better not to put any constraint on which name is provided and to allow for a flexible structure to accommodate cultures where names might come in a different order.</li> </ul>"},{"location":"D-IDE/#communicating-inclusive-design","title":"Communicating inclusive design","text":"<p>Communicating your IUI - and especially the accessibility parts which can be graphically invisible - to developers is not an easy task. As most developers are used to receiving designs that they implement based on their experience of what using an app is like, you will likely not get a good result if your communication is not clear.</p> <p>The best way to communicate the UX you are aiming for users who use assistive technologies is through design annotations, so that you - as a designer - get to think about the labels, focus order, etc. before the implementation starts. We detail how to do so in the platform-specific modules.</p> <p>Another key to achieving your inclusiveness goals for your UI is to actively test and provide feedback using assistive technologies. Accompanying developers towards a great (inclusive) UX takes time and will likely require many iterations - not to mention that your designs will never be perfectly inclusive either!</p>"},{"location":"D-IDE/#activity-designing-and-iui-on-a-whiteboard","title":"Activity : designing and IUI on a whiteboard","text":"<p>By groups, trainees are invited to design a simple interface (with pen and paper or any design tool they like) that aims at being as inclusive as possible.</p> <p>On possibility is to ask for an account creation screen for a social media app. The platform can differ from one group to the other.</p> <ul> <li>The interface should include:<ul> <li>Fields to fill in social media informations (like name, gender, hobbies, etc.)</li> <li>A button to send the form</li> <li>A way of going back to the home page</li> <li>A checkbox to accept the service\u2019s TOS, with a link to access them</li> </ul> </li> </ul> <p>The trainer can encourage the groups to think of the ways they can use what they\u2019ve just learned, without feeling the need to implement everything: inclusion is a journey, not an issue to be tackled in ten minutes anyway!</p>"},{"location":"D-IDE/#wrapping-up","title":"Wrapping up","text":"<p>Here are the key takeaways of this module:</p> <ul> <li>An inclusive app is one using which users can thrive with and feel welcome in.</li> <li>Designers have a big responsibility regarding inclusiveness as they are their team\u2019s compass towards an outstanding experience for everyone.</li> <li>The IUI should not be seen as a standard UI that was made accessible, nor as a separate UI, but as an ideal to strive for, for the entire UI to be inclusive and welcoming for everyone.</li> <li>Building an IUI is a long process, that can start with baby steps today.</li> </ul> <p>Remember: good design is accessible, and good design benefits everybody!</p>"},{"location":"D-IDE/#resources","title":"Resources","text":"<p>Color Contrast Checker &amp; Accessibility Checker | Figma</p> <p></p> <p>AUI Perspective v2.excalidraw</p>"},{"location":"D-IDE/#sources","title":"Sources","text":"<p>Shew, Ashley (2024). Against Technoableism: Rethinking Who Needs Improvement, WW Norton &amp; Co.</p> <p>Winner, Langdon (1980). Do artifacts have politics? Daedalus 109 (1): pp. 121--136.</p> <p>Apple Human Interface Guidelines: Accessibility</p> <p>Principles of Inclusive App Design (Apple)</p> <p>Cambridge's dictionary's definition of inclusiveness</p>"},{"location":"E-APQ/","title":"\ud83d\udcd7 E-APQ: Accessible programming with Qt","text":"<p>In this module</p> <p>This module provides information needed for building accessible code using the Qt framework.</p> <p>\u26f3\ufe0f Section: E. Programming inclusive and accessible software</p> <p>\ud83d\udc65 Audience: Developers</p> <p>\u23f1\ufe0f \ufe0fDuration: 10'</p> <p>\ud83d\udcda Prerequisites: \ud83d\udc69\u200d\ud83d\udcbb E-ICO Inclusive code 101</p>"},{"location":"E-APQ/#when-to-use","title":"When to use ?","text":"<p>Go through this module if your app uses Qt, or if you consider using it for your app. Please note that this module requires the trainee to follow \ud83d\udc69\u200d\ud83d\udcbb E-ICO Inclusive code 101 first.</p>"},{"location":"E-APQ/#description","title":"Description","text":"<p>There are only few example of good accessibility implementation using Qt. Even the one provided by Qt themselves are limited to a single static page with a few elements. Therefore, we will go through all of Qt's main accessibility elements while taking a look at a complex UI element, a chat view.</p>"},{"location":"E-APQ/#accessibility-labels","title":"Accessibility labels","text":"<p>Screen-readers and other accessibility technologies need specific information in order to navigate through your app. We are lucky that Qt provides a way of setting it automatically using the QAccessible Class. This class is inherited by all of Qt's items.</p> <p>It will try to automatically fill the accessibility fields but this often fails. Therefore you should set those fields manually in order to make your interface accessible. The bare minimum is setting:</p> <ul> <li>The role: this will indicate to the accessibility technology users (like a screen-reader or a braille display) how they can interact with this specific object. It can take values such as Button, StaticText, Heading, dialog... You can find the full list in the according Qt's documentation of QAccessible::Role.</li> <li>The name: this is the main title of your component, like for example \"Create account Button\" or \"Language selection ComboBox\".</li> <li>The description: this should explain to the user what will happen if they interact with this component as well as any additional context information. It can be for example \"Display your QR code to allow other users to scan it and add you as a contact\" or \"Use arrows to switch between available accounts\".</li> </ul> <p>In QML code this would look like :</p> <pre><code>Accessible.role: Accessible.Button\nAccessible.name: toolTipText\nAccessible.description: JamiStrings.qrCodeExplanation\n</code></pre> <p>For many elements, like a message for example, you would want the accessibility to be grouped in ways that are not as obvious as the example above. Let's say that we want to design it for our chat-view. We only want the message to be focusable and it should contain all the information needed. In the \ud83c\udfa8 D-IDE: Inclusive design 101 module, we stated that the label should read something like:</p> <pre><code>\"Michel Berger. 3 unread messages. You said : Thanks ! at 9:07.\nMessage status : sent. Pinned. Actions available.\u201d\n</code></pre> <p>The code producing an implementation close to this one would be :</p> <pre><code>    Accessible.role: Accessible.StaticText\n    Accessible.name: {\n        let name = isOutgoing ? JamiStrings.inReplyToYou : UtilsAdapter.getBestNameForUri(CurrentAccount.id, Author)\n        return name + \": \" + Body + \" \" + formattedTime + \" \" + formattedDay\n    }\n    Accessible.description: {\n        let status = \"\"\n        if (bubble.isEdited) status += JamiStrings.edited + \" \"\n        if (IsLastSent) status += JamiStrings.sent + \" \"\n        return status + (readers.length &gt; 0 ? JamiStrings.readBy + \" \" + readers.join(\", \") : \"\")\n    }\n</code></pre>"},{"location":"E-APQ/#keyboard-navigation","title":"Keyboard navigation","text":"<p>As stated in \ud83d\udc69\u200d\ud83d\udcbb E-ICO Inclusive code 101, keyboard and focus navigation is mostly automatically set by Qt, but the framework often fails to navigate complex elements. You need to make sure that all focusable elements are reached. Before manually setting keyboard navigation, you should try and use the base focus property of Qt. For example, setting the focus of a component to true might be enough for Qt to recognize it as a reachable interactive element. These will largely depend of the component you will be working on but you will get used to seeing some of the following variables.</p> <pre><code>    keyNavigationEnabled: true\n    keyNavigationWraps: false\n    focus: true\n    activeFocusOnTab: true\n</code></pre> <p>That said, you will often need to set manually the keyboard navigation using Qt's KeyNavigation class.</p> <p>A very easy example would be:</p> <pre><code>KeyNavigation.backtab: addAccountItem\nKeyNavigation.tab: shareButton\nKeyNavigation.up: addAccountItem\nKeyNavigation.down: shareButton\n</code></pre> <p>In some case like a contextual menu, you might want to add conditional navigation:</p> <pre><code>KeyNavigation.backtab: index === 0 ? settingsButton : null\nKeyNavigation.tab: index === listView.count - 1 ? addAccountItem : null\nKeyNavigation.up: KeyNavigation.backtab\nKeyNavigation.down: KeyNavigation.tab\n</code></pre> <p>Regarding our chat view, we previously stated in \ud83c\udfa8 D-IDE: Inclusive design 101 that \"we would typically focus the last element of the discussion first, because it is typically the one of interest, and because it gives a quick access to the text input. But this is clearly a design choice that must be well-thought and tested in the context of your app.\" This is only one of the many possible implementations. We could also want to send users directly to the text stating the current discussion's name.</p> <p>Inside the list of messages, we could want users to navigate between elements using the arrows and TAB to directly go to the text input field - but once again, this is a design choice.</p> <pre><code>// Rather than doing this inside the message itself, we do it at the ListView level\nListView {\n    id: root\n    // We try to minimize custom code for navigation and therefore use\n    // the Qt base property of a List view rather than setting\n    // KeyNavigation.tab each time\n    keyNavigationEnabled: true\n    keyNavigationWraps: false\n}\n</code></pre>"},{"location":"E-APQ/#the-accessibleinterface-class","title":"The AccessibleInterface Class","text":"<p>The QAccessibleInterface Class is useful to create inclusive user interfaces. It implements a pure virtual API that allows assistive technologies like braille displays or screen readers to directly access information about accessible objects. We have less experience with it as we haven't implemented it on applications we are working on yet. You can find very comprehensive information about it in this typevar article</p>"},{"location":"E-APQ/#sources","title":"Sources","text":"<p>Qt's documentation of QAccessible Class Qt's documentation of QAccessible::Role Qt's documentation of KeyNavigation class Qt's documentation of QAccessibleInterface Class Enhancing Accessibility with QAccessibleInterface in Qt Applications </p>"},{"location":"E-ICO/","title":"\ud83d\udc69\u200d\ud83d\udcbb E-ICO Inclusive code 101","text":"<p>In this module</p> <p>This module provides general information needed for building accessible code on any platform or language.</p> <p>\u26f3\ufe0f Section: E. Programming inclusive and accessible software</p> <p>\ud83d\udc65 Audience: Developers</p> <p>\u23f1\ufe0f \ufe0fDuration: 15'</p> <p>\ud83d\udcda Prerequisites: C-WDU We are all disabled and unique : accessibility, plurality and intersectionality</p>"},{"location":"E-ICO/#when-to-use","title":"When to use ?","text":"<p>This module should be used with trainees before diving into the accessibility specificities of their platform, language or framework. It aims at settling good practices and avoiding common accessibility pitfalls.</p>"},{"location":"E-ICO/#description","title":"Description","text":""},{"location":"E-ICO/#1-development-mindset-accessible-code-is-good-code","title":"1. Development mindset : Accessible code is good code","text":"<p>As we will see in this section, bad accessibility can often be a symptom of flawed code. That\u2019s good news ! It means that fixing it often only requires good code practices.</p>"},{"location":"E-ICO/#1a-custom-components-and-accessibility","title":"1.A - Custom components and accessibility","text":"<p>Many applicative frameworks come packed with standards components (like labels, buttons, timers, etc.). To put it simply, the main takeaway of this section would be:</p> <p>\u26d4 Don't reinvent (or program in our case) the wheel ! (please)</p> <p>You code can be good but will never be as robust as one iterated upon by a community of developers or a big company. Therefore, before implementing anything, check rigorously that your framework (or a library) doesn\u2019t provide a tool that would meet most of your needs.</p> <p>Frameworks often have unified and often automated ways of handling accessibility with key navigation, focus and label generation. Therefore, building complex custom components will very frequently (not to say almost always) break accessibility handling if no more work is done. Therefore, try to limit the complexity of your UI objects, document them properly and when trying to fix an accessibility issue, consider taking the hard way by refactoring the component. Your whole code will actually be better.</p> <p>For a more concrete example, on the left you can see a custom combo-box component, deeply broken from an accessibility standpoint. On the right, you can see a native Qt combo-box, more feature-full -aesthetics aside- and working fine with a screen reader and Keyboard navigation without necessitating any intervention.</p> <p>We believe that there are very few reasons not to use the second one.</p> <p>If however you decide to make a custom component, make sure you implement extensively the accessibility APIs provided by your framework. This generally requires a deeper understanding of how accessibility is handled by your platform, but can be done well though it will likely require some maintenance over time.</p>"},{"location":"E-ICO/#1b-what-bad-accessibility-says-about-our-code-a-few-concrete-examples","title":"1.B - What bad accessibility says about our code: a few concrete examples","text":"<p>Accessibility and inclusiveness in programming have one key benefit : making you think twice about your code. As said previously, stumbling into an accessibility issue might mean that you could be doing something better in a different way.</p> <p>Let\u2019s investigate that by taking a look at the most obviously broken component in Jami : the username info box tooltip (the small 'i' on the right).</p> <p></p> <p>It\u2019s an \u201cinfo box\u201d (as called in the code), but a screen reader will handle it as a push button. That seems weird, as this is used as a tooltip, not a button allowing an action. Additionally, it doesn\u2019t react well when selecting and unselecting the username text edit.</p> <p>That is because in the code, this component is indeed a button. That goes without saying that it\u2019s not a good way of implementing it, and as a result, the corresponding code is very extensive (more than 80 lines of code)! This is the cause of both accessibility and the selection issues. While it technically works, there are plenty of ways to use default components for a better result. In this case, broken accessibility indicate bad implementation choices.</p> <pre><code>icon: PushButton {\n\n    id: infoBox\n    z: 1\n    normalColor: \"transparent\"\n\n    // ...\n    checkable: true\n    onCheckedChanged: {\n        textBoxinfo.visible = !textBoxinfo.visible;\n    }\n    preferredSize: 20\n    // ...\n\n}\n</code></pre> <p>Another example would be the account selection list in Jami. It was not possible to navigate between the different items using the keyboard arrows making it non-usable from an accessibility standpoint.</p> <p> </p> <p>That\u2019s an unexpected behavior as the best ListView Qt component (which our custom component is based on) supports this navigation method. A quick inspection of the code revealed those lines :</p> <pre><code>Keys.onUpPressed: verticalScrollBar.decrease()\nKeys.onDownPressed: verticalScrollBar.increase()\n</code></pre> <p>By reimplementing a scroll feature and binding it to the arrows key, we effectively broke the base behavior of the component. Here, broken accessibility showcase flawed design as the expected behavior of the component hasn\u2019t been thought all the way through.</p> <p>In this case, the fix was rather simple: use the base component rather the custom one.</p> <p>And when you don't have the choice to work with custom components, remember to pay close attention to your framework's accessibility APIs and guidelines to make sure your components can blend in.</p>"},{"location":"E-ICO/#1c-focus-and-explicit-key-navigation-choose-the-right-tool-at-the-right-time-desktop","title":"1.C Focus and explicit key navigation, choose the right tool at the right time (Desktop)","text":"<p>In order to implement alternative navigation in your app (keyboard, voice over, talkback, vocal command, etc), on desktop, they are two main way of doing it : focus and explicit key navigation. By default, your framework will try to predict the order in which you would want to move between objects by making all focusable elements accessible through alternative navigation. This will work mostly well on basic components.</p> <p>It happens very often that this flow of navigation breaks for numerous reasons, a pop-up could have appeared, new UI elements might be visible or maybe the elements are complex (sub-tabs in settings for example)</p> <p>As stated previously, all interactive components must be accessible :</p> <p>If one is simply not reachable, your first strategy should be to try and make it focusable so that your framework can automatically incorporate it in its navigation.</p> <p>Often, that might not be enough. The element could be reachable but not in any practical way. For example in a chat view, keyboard navigation could automatically send you to the first message loaded, forcing the user to pass through the whole conversation before accessing the message bar.</p> <p>In those situations, you could want to use explicit keyboard navigation, to force a component to send you to another component that you has chosen. This is the most flexible but more time expensive approach. An example in pseudo code would be :</p> <pre><code>KeyNavigation.tab: isTheExtendedViewLoaded() ? settingsButton : moreInfosButton\nKeyNavigation.backtab: newAccountButton\nKeyNavigation.up: isTheExtendedViewLoaded() ? fromBackupButton : alreadyHaveAccountButton\nKeyNavigation.down: KeyNavigation.tab\n</code></pre>"},{"location":"E-ICO/#2-development-process","title":"2. Development process","text":""},{"location":"E-ICO/#2a-what-can-be-automated","title":"2.A\u00a0What can be automated?","text":"<p>What can be automated is a tricky question. As we stated previously, inclusiveness is a process and the need for an intersectional perspective make it impossible to think ahead every need that diverse user with complex background and set of ability might have.</p> <p>Therefore, no amount of checklists and tests in CI can replace feedback and testing from diverse user groups.</p> <p>That said, a few things can be set to try and automatically detect as much issue as possible. If your app is a web-view, this will be very easy and convenient. You can go to the \ud83d\udd27 E-ITD Inclusiveness technologies Desktop module for more information.</p> <p>If you app is native, you can set-up your CI to detect missing accessibility labels on focusable elements and setup a test that navigate through all od the elements of a view using the keyboard, checking that none of them wasn\u2019t reached.</p> <p>Some frameworks (including SwiftUI and Jetpack Compose) provide ways of automating UI tests that check accessibility.</p> <p>You can also use a template of a checklist containing the main elements to be sounded and share it with your team. We provide you, our own accessibility checklist template. Feel free to iterate upon it and to propose your enhancements in this repository.</p> <p>Remember : this should not be seen as a way to make your UI accessible, but rather to be sure you commit won't break any existing accessibility that was implemented. For new features, it is essential to design the UI with accessibility in mind from the very start.</p> <p></p> <p>The diagram in text format:</p> <p>Did you change/create a UI component ?</p> <ul> <li>If no: skip to the question about data manipulation</li> </ul> <p>Can you access it in a practical way with your keyboard or VoiceOver/TalkBack alone ?</p> <ul> <li>If no: Fix it ! All elements should be accessible without a mouse. Most users would expect the navigation to take place using TAB and BACKTAB. Arrows are also useful inside of lists. A top bar would typically be accessible with ALT. Shortcuts can make this navigation smoother.</li> </ul> <p>Are all information and labels properly transcribed using a screen reader ?</p> <ul> <li>If no: Fix it ! You can test this using your system screen reader on the settings or NVDA on Windows. You can then navigate through the app and hear if the labels are relevant. All information like the state of a component or wether it's selected must be transcribed. Expect to provide in your code:<ul> <li>A name for the element</li> <li>A description of it's effect</li> <li>it's role (for example static text or button)</li> </ul> </li> </ul> <p>Does it work with different text scaling ?</p> <ul> <li>If no: Fix it! Most operating systems have text scaling options.  Some apps have their own too. Check if your UI isn't cropped by changing the size of the font. Try it for smaller and for bigger text.</li> </ul> <p>Did you affect another component ?</p> <ul> <li>If yes: repeat the previous questions for the other component</li> </ul> <p>Is the data manipulated in your code easily accessible from UI components ?</p> <ul> <li>If no: Make functions in  your API that allow  UI components to access relevant information. For example, the time of a message is often in a separated component from the message itself but the accessibility label of this message could need access to the date where it was sent.</li> </ul> <p>Does it work well for all languages ? (including non UTF8 and RTL ones )?</p> <ul> <li>If no: Fix it! Some languages like Greek are often not encoded in UTF8. Be sure to account for them. Also check that RTL (right to left) languages like Arabic displays correctly. To test this, you can use parts of local newspapers as placeholders !</li> </ul> <p>Does it has elements showing cultural significance ?</p> <ul> <li>If no: You are good to go!</li> <li> <p>If yes: Does it enable people from various cultural background to feel represented?</p> <ul> <li> <p>If you for no: Fix it! For example, a picture of a cheeseburger or a pizza as an illustration for food will only enable a certain demographic of users to feel represented. Having separate field for first and last name will not allow users from certain cultures to use the app properly. The only way to try and make our application more inclusive is to show it to people from varied background ans ask them about their needs to use it properly.</p> </li> <li> <p>If you hope yes: You are good to go!</p> </li> </ul> </li> </ul>"},{"location":"E-ICO/#2b-accessible-apis-back-end","title":"2.B Accessible API\u2019s &amp; back-end","text":"<p>On the back-end too, accessible code is good code. A well-designed architecture or API will be more understandable for everyone to understand and iterate on, particularly for open source software.</p> <p>Here are some key elements to making your API accessible:</p> <ul> <li>When choosing a name for some object, make sure to apply those principles:<ul> <li>Avoid abbreviations, which can be difficult to understand to some people due to language, screen reader use, or cognitive disabilities.</li> <li>Make sure the name is as clear and complete as possible.</li> </ul> </li> <li>Regarding documentation and code commenting, remember to:<ul> <li>Write clear sentences with simple language that will enable everyone to understand the purpose of your code.</li> <li>If your documentation is built to HTML, check with the WAVE tool that it is WCAG-compliant.</li> </ul> </li> </ul>"},{"location":"E-ICO/#3-conclusion","title":"3. Conclusion","text":"<p>Accessible programming can be overwhelming, mostly due to the lack of resources for native apps, but with the right tools it\u2019s absolutely bearable. Remember that accessibility issues in your code often hide underlying issues. Also remember to set up proper workflows and tests.</p> <p>From here, you might want to take a look at some of our modules about inclusive programming for different platforms, ecosystems and frameworks.</p>"},{"location":"E-ICO/#resources","title":"Resources","text":"<p>QuickInclusivenessCheck.excalidraw</p> <p>WAVE Accessibility tool</p>"},{"location":"E-ICO/#sources","title":"Sources","text":"<p>Agile Accessibility Handbook</p>"},{"location":"E-ITD/","title":"\ud83d\udd27 E-ITD Inclusiveness technologies : Desktop","text":"<p>In this module</p> <p>This module gives a comprehensive list of accessibility testing tools (both manual and autonomous). The goal is not to get in depth on how to use them but rather to help designers and developers to find the relevant tools for their use case.</p> <p>\u26f3\ufe0f Section: E. Programming inclusive and accessible software</p> <p>\ud83d\udc65 Audience: Developers</p> <p>\u23f1\ufe0f \ufe0fDuration: 15'</p> <p>\ud83d\udcda Prerequisites: \ud83d\udc69\u200d\ud83d\udcbb E-ICO Inclusive code 101</p>"},{"location":"E-ITD/#when-to-use","title":"When to use ?","text":"<p>This module is almost certainly a must have for an type of workers searching for the adequate tools.</p>"},{"location":"E-ITD/#what-to-avoid","title":"What to avoid","text":"<p>As we saw in \ud83d\uddfa\ufe0f A-BCT Brief cartography of today\u2019s accessibility landscape, some tools are really despised by accessibility and inclusiveness experts and with valid reasons. We could summarize by saying: stay away from AI accessibility tools. They are often more detrimental than anything. Accessibility is really hard to automate specifically because it's about embracing diversity and learning from other's needs. Using AI tools could make you technically compliant with some legislation (for example filling all of the empty labels on your application) but it won't make your application usable by people with disabilities.</p> <p>The errors automaticly detected highly depends of context (for example a long accessibility label is not necessarily a bad thing if attached to a schematic but will be flagged automaticly as an issue). Furthermore, the fixes are often clunky, unintuitive and don't take the specific of the application architecture into account.</p> <p>Disabled people are the expert about accessibility. Listen to them, not to an AI trying to predict their needs.</p>"},{"location":"E-ITD/#a-screen-reader-and-a-keyboard","title":"A screen reader and a keyboard","text":"<p>Screen readers are very useful tools to test the accessibility of an application. While it does not fullfill the need of testing by users in question, apps that are fully accessible using a keyboard and a screen reader are more likely to address a good amount of accessibility needs.</p> <p>A good and simple practice is to always check if your modifications on the UI are fully accessible only with your keyboard \u2014 not a challenge for our beloved vim users.</p> <p>You can find more information in this very informative video:</p> <p>You may also find this comparison of screen readers helpful:</p> <p>Most systems have a built-in screen reader in their settings,  you should use them to test your app but don't limit yourself to them as they are often pretty basic. Most screen readers have plugins for the most used apps. If you have the available resources, you might want to develop one for your app specifically.</p>"},{"location":"E-ITD/#nvda","title":"NVDA","text":"Platform Pros Cons WindowsTheoretically Linux (via Wine) <ul> <li>Free and open source</li> <li>Very lightweight</li> <li>Doesn't crash much</li> </ul> <ul> <li>Plugins for major productivity apps are often not as robust as JAWS</li> </ul> <p>NVDA is open source and mainly available on Windows (you can still run it on Linux using Wine but it will inconsistently work). It's free and therefore is a very good tool to start testing accessibility. One of it's key advantage is that it's very lightweight meaning that it starts a lot faster that other screen readers which can make all the difference when those softwares are known to crash easily. It's still a bit limited on some complex applications like Excel.</p> <p>It still has an active community developing plugins for integrating it into different apps. Consider doing it for yours!</p> <p>You can easily find a complete list of shortcuts for NVDA.</p> <p></p>"},{"location":"E-ITD/#jaws","title":"Jaws","text":"Platform Pros Cons Windows <ul> <li>Industry standard</li> <li>Has a lot of plugins</li> </ul> <ul> <li>Crashes a lot</li> <li>Requires a lot of RAM</li> <li>Very expensive</li> <li>Hard to learn</li> <li>Can be confusing</li> </ul> <p>Jaws is is the high end professional screen reader. It allows for a lot of customization, has a lot of plugins especially for higher education. That said, it can be overwhelming, crashes for seemingly no reason, it\u2019s not open source and more importantly a license will cost you more than 600$ a year\u2026</p> <p>That's why we recommend NVDA.</p> <p></p>"},{"location":"E-ITD/#voiceover-for-macos","title":"VoiceOver for macOS","text":"Platform Pros Cons macOS <ul> <li>Very easy to learn</li> <li>Very fluid and intuitive</li> </ul> <ul> <li>Only available on macOS</li> </ul> <p>VoiceOver is the native screen reader for Apple products. It's known for being very  easy to learn making for a fluid and intuitive experience. In the screen reader comparison linked previously in this article, the user state that learning Jaws took them years compared to the week-end it took them to get used to VoiceOver.</p> <p>While being a very good, Voice Over is only available on apple machines and therefore often not useful to most users.</p>"},{"location":"E-ITD/#accessibility-insights-for-windows","title":"Accessibility Insights for Windows","text":"Platform Pros Cons Windows <ul> <li>One of the only tools available to check object tree and labels on desktop apps</li> </ul> <ul> <li>Only works on Windows</li> <li>Doesn\u2019t provide much information about how to fix the issue encountered</li> </ul> <p>Accessibility Insights for Windows is a tool developed by Microsoft. It aims at visualizing the object hierarchy of an application. It\u2019s a must have for diagnosis of missing labels and understanding where property hierarchy is broken.</p> <p>Here you can see an example of a poorly described object tree in Jami.</p> <pre><code>\u2755 An empty label is not always a bad thing depending of the framework that you\nare using. It can sometimes be useful to not register too many ID accessible as\nsingletons.\n</code></pre> <p></p>"},{"location":"E-ITD/#wave","title":"Wave","text":"Platform Pros Cons Web <ul> <li>Very easy to use</li> <li>Completely free</li> </ul> <ul> <li>Can be limited</li> <li>Often misleading</li> </ul> <p>Wave is a testing software to automatically detect warnings and errors related to the WCAG Accessibility guidelines. It\u2019s as simple as entering your domain to see prevalent issues with your website.</p> <p>While you might be working on a native app, it\u2019s very likely that you or your organization have a website along with it. Wave is a very convenient way to check if you\u2019re also up to date on that end without necessitating further knowledge.</p> <p></p> <p>Still be careful not to believe blindly the feedback form automated tools lke Wave. It will often make mistakes and is not a substitute for savoir-faire in any way.</p> <p></p> <p>Some other similar web accessibility tools would be Axe or Lighthouse.</p> <p>Again, please note that accessibility experts are mostly warning us not to rely too much on those diagnosis tools as they can often be misleading and prevent us from getting into the perspectives of disabled users.</p>"},{"location":"E-ITD/#user-groups","title":"User groups","text":"Pros Cons <ul> <li>The most relevant feedback you could get</li> <li>Allows you to create in synergy with the users</li> </ul> <ul> <li>Very time consuming to organize</li> <li>Can lead to biases if not done properly</li> </ul> <p>User groups are one of the most reliable way to build an accessible and inclusive application. Getting people from various background to test your application and here about their feedback and ideas is in our opinion the best way to minimize the risk of leaving some users behind.</p> <p>You should try and make those user groups as diverse as possible. You could post on your socials asking if some disabled users would be interested in providing feedback. Users can have different designated discussion canal with the team working on the project or directly contact them. Keep in mind that you want to promote interaction between users, allowing them to reflect on their own experiences.</p> <p>This can only be done properly if the team working on the project is actively listening to the feedback they get. Their should be a way of keeping track of the different problems raised by the users and the progress made on fixing them. The product and design team should have occasional sessions and calls with some users to discuss precisely how they would want to implement something (for example what implementation of keyboard navigation feels more intuitive). This can be massively useful during prototyping.</p>"},{"location":"E-ITD/#resources","title":"Resources","text":"<p>NVDA</p> <p>Jaws</p> <p>Voice over</p> <p>Accessibility Insights for Windows</p> <p>Wave</p>"},{"location":"E-ITD/#sources","title":"Sources","text":"<p>Accessibility Testing Tools Overview</p> <p>NVDA Keyboard Shortcuts</p> <p>Screen Reader Comparison</p>"},{"location":"F-CLS/","title":"\ud83d\udcac F-CLS: Collective sharing","text":"<p>In this module</p> <p>This module allows participants to reflect on what they learned, throughout the training and from others. Depending on the situation, it can come in various forms of different durations.</p> <p>\u26f3\ufe0f Section: F. To conclude and go further</p> <p>\ud83d\udc65 Audience: Everyone</p> <p>\u23f1\ufe0f \ufe0fDuration: 20'</p> <p>\ud83d\udcda Prerequisites: None</p>"},{"location":"F-CLS/#when-to-use","title":"When to use ?","text":"<p>Use it at the end of the training as a way of concluding this journey. This is a key moment of the training, making the collective feel like they went through a journey together, and giving them the occasion to reflect on what they learned.</p>"},{"location":"F-CLS/#description","title":"Description","text":""},{"location":"F-CLS/#option-1-what-did-others-learn-2030min","title":"Option 1 : What did others learn ? (20/30min)","text":"<p>The participants (including the trainer) stand up and move randomly in the room until you give them the signal to stop. When you do, they partner up with the closest person. If you don\u2019t have enough space for that, you can simply draw random numbers (with each number written twice in the pool) and people team up with the person having the same. You could also make them pair with the person at their left and then at their right. They can then share with each other their answer to the following questions :</p> <ol> <li>What would be one thing that you learned ?</li> <li>What would be one thing that you felt ?</li> <li>What would be one thing that will change in your work ?</li> </ol> <p>Repeat this up to 4 times and then get the participants back in circle. Each one can then share something that someone told them during the exercise, without naming who.</p> <p>For example, a sentence could be : \u201cSomeone told me they felt ashamed of knowing so little about accessibility, but eager to try their best to get the app to be more accessible.\u201d</p>"},{"location":"F-CLS/#option-2-together-on-a-boat-1015min","title":"Option 2 : Together on a boat (10/15min)","text":"<p>This version has significantly less collective building effect than the first variation but works well as an alternative when you are behind schedule or in a context where people cannot move in the room (for example in a video-conference context).</p> <p>Each participant (including the trainer) gets a copy of the boat drawing found in the resources. Then, everybody takes turn explaining which character they felt like at the beginning of the formation, and which one they feel like now. This is the occasion for every participant to reflect on how this experience affected themselves and others around !</p>"},{"location":"F-CLS/#resources","title":"Resources","text":"<p>For the second option, you can use this illustration of Mathilde Riou and Vincent Chaillou :</p> <p></p> <p>If one or many trainees are blind or have low vision, you can use this alternative list of characters on the ship:</p> <ul> <li>Balloon Lookout</li> <li>Shy Observer</li> <li>Fast Climber</li> <li>Rope Acrobat</li> <li>Lazy Sleeper</li> <li>Ship Leader</li> <li>Tired Crawler</li> <li>Group Chatters</li> <li>Confused Floater</li> <li>Energetic Swimmer</li> <li>Happy Musician</li> <li>Careful Listener</li> <li>Daydreamer</li> </ul>"},{"location":"F-WYG/","title":"\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f\u200d\u27a1\ufe0f F-WYG: Where YOU go next !","text":"<p>In this module</p> <p>This module is a small workshop reflecting on what to do next to make the team's app more accessible. It is useful to get the ball rolling in the trained team.</p> <p>\u26f3\ufe0f Section: F. To conclude and go further</p> <p>\ud83d\udc65 Audience: Everyone</p> <p>\u23f1\ufe0f \ufe0fDuration: 15'</p> <p>\ud83d\udcda Prerequisites: None</p> <p>\ud83d\udcd6 Is a prerequisite to: None</p>"},{"location":"F-WYG/#when-to-use","title":"When to use ?","text":"<p>This is the penultimate module of this formation on inclusive design and programming. It creates the space for the trained team(s) to think about the ways they can make their app more inclusive.</p>"},{"location":"F-WYG/#description","title":"Description","text":""},{"location":"F-WYG/#option-1-what-did-others-learn-2030min","title":"Option 1 : What did others learn ? (20/30min)","text":"<p>Create different groups based on the platforms people are working on and/or if they are rather on the side of product management, development, design or something else - any criteria works best for the trained organization or team. </p> <p>Each group starts by listing the obvious inclusiveness flaws in their field, how they can address them, and the ways they can discover more. Then, each group can choose or elect someone to open the issues for each platform right after the meeting. </p> <p>This person will be the \u201cinclusiveness coach\u201d of their group for the following weeks. That doesn\u2019t mean that they will fix those issues themselves but rather that they will keep track of the updates on the topic, for example by following up with developers to see how the implementation of those features are going.</p> <p>Once every group has finished this process, they are given the opportunity to explain briefly to the others what there inclusiveness roadmap will be and who is the \u201ccoach\u201d in their group. This will help communication between teams as other employees will know who to refer to talk about inclusiveness.</p>"}]}